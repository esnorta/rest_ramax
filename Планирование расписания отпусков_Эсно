{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Duck or Huck"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ortools.linear_solver import pywraplp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "path = '/Users/timmac/Projects/Hacks/Ramax/vacation/'\n",
    "input_file = 'input_vacation.xlsx'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [],
   "source": [
    "REST_YEAR=184\n",
    "MIN_REST_SIZE=36\n",
    "MIN_REST_LAG=2\n",
    "TOTAL_RESTS=4\n",
    "PRIOR_RESTS=3\n",
    "NOPRIOR_RESTS=3\n",
    "REST_HIGH=147\n",
    "REST_LOW=147"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "quals = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=1, header=None, names=['quals'],\n",
    "                     engine='openpyxl')\n",
    "quals.index += 1 \n",
    "##\n",
    "p_lvl = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=2, header=None, names=['pers', 'lvl'], \n",
    "                      engine='openpyxl')\n",
    "p_lvl.index += 1 \n",
    "##\n",
    "months =  pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=3, header=None, names=['mon', 'top_m', 'hours'], \n",
    "                        engine='openpyxl')\n",
    "months.index += 1 \n",
    "##\n",
    "q_lvl = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=4, header=None, names=['q_lvl'],  \n",
    "                        engine='openpyxl')\n",
    "q_lvl.index += 1 \n",
    "##\n",
    "max_f = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=5, header=None, names=['work_h'],  \n",
    "                        engine='openpyxl')\n",
    "max_f.index += 1\n",
    "##\n",
    "q_fied = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=6, header=None,  \n",
    "                        engine='openpyxl') \n",
    "q_fied.index += 1 \n",
    "##\n",
    "r_pers = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=7, header=None,  \n",
    "                        engine='openpyxl')\n",
    "r_pers.index += 1 \n",
    "##\n",
    "wishes = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=8, header=None,  \n",
    "                        engine='openpyxl')\n",
    "wishes.index += 1 \n",
    "wishes.columns=['m_1','m_2','m_3','m_4','m_5','m_6','m_7','m_8','m_9','m_10','m_11','m_12']\n",
    "##\n",
    "r_prior = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=9, header=None,  \n",
    "                        engine='openpyxl')\n",
    "r_prior.index += 1\n",
    "r_prior.columns=['m_1','m_2','m_3','m_4','m_5','m_6','m_7','m_8','m_9','m_10','m_11','m_12']\n",
    "##\n",
    "starts = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=10, header=None, names=['str'],  \n",
    "                        engine='openpyxl')\n",
    "starts.index += 1 \n",
    "##\n",
    "m_starts = pd.read_excel(path + input_file, \\\n",
    "                      sheet_name=10, header=None, names=['max_str'],  \n",
    "                        engine='openpyxl')\n",
    "m_starts.index += 1 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>...</th>\n",
       "      <th>2418</th>\n",
       "      <th>2419</th>\n",
       "      <th>2420</th>\n",
       "      <th>2421</th>\n",
       "      <th>2422</th>\n",
       "      <th>2423</th>\n",
       "      <th>2424</th>\n",
       "      <th>2425</th>\n",
       "      <th>2426</th>\n",
       "      <th>2427</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 2427 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "0   1     2     3     4     5     6     7     8     9     10    ...  2418  \\\n",
       "1      0     0     0     0     0     0     0     0     0     0  ...     0   \n",
       "2      1     1     0     1     0     1     0     1     1     1  ...     0   \n",
       "3      0     0     0     0     0     0     0     0     0     0  ...     0   \n",
       "4      0     0     1     0     0     0     0     0     0     0  ...     0   \n",
       "5      0     0     0     0     0     0     0     0     0     0  ...     0   \n",
       "6      0     0     0     0     0     0     0     0     0     0  ...     0   \n",
       "7      0     0     0     0     0     0     0     0     0     0  ...     0   \n",
       "8      0     0     0     0     0     0     0     0     0     0  ...     0   \n",
       "9      0     0     0     0     0     0     0     0     0     0  ...     0   \n",
       "10     0     0     0     0     0     0     1     0     0     0  ...     0   \n",
       "\n",
       "0   2419  2420  2421  2422  2423  2424  2425  2426  2427  \n",
       "1      0     0     0     0     0     0     0     0     0  \n",
       "2      0     0     0     0     0     0     0     0     0  \n",
       "3      0     0     0     0     0     0     0     0     0  \n",
       "4      0     0     0     0     0     0     0     0     0  \n",
       "5      1     0     0     0     0     0     0     0     0  \n",
       "6      0     0     0     0     0     0     0     0     0  \n",
       "7      0     0     0     0     0     0     0     0     0  \n",
       "8      0     0     0     0     0     0     0     0     0  \n",
       "9      0     0     0     0     0     0     0     0     0  \n",
       "10     0     0     0     0     0     0     0     0     0  \n",
       "\n",
       "[10 rows x 2427 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Делаю шапку по количеству персонала\n",
    "#добавил колонку от 1 до n сотрудников\n",
    "col_all = p_lvl.reset_index()\n",
    "#удалил лишнее\n",
    "col_all = col_all.drop(col_all.columns[[1, 2]], axis=1)\n",
    "col_all = col_all.rename(columns={'index': 0})\n",
    "#новая шапка \n",
    "col_all = col_all.T\n",
    "#соединяю новую шапку и таблицу и таблицу с квалификациями\n",
    "q_fied = [col_all, q_fied]\n",
    "q_fied = pd.concat(q_fied)\n",
    "#переназначил новую колонку\n",
    "q_fied.columns = q_fied.iloc[0]\n",
    "#удалил лишнюю строку\n",
    "q_fied = q_fied.reindex(q_fied.index.drop(0))\n",
    "#Готово\n",
    "q_fied"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "q_fied_tot = q_fied.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Определяю количество квалификаций у каждого человека\n",
    "q_fied_tot.loc['Total']= q_fied_tot.sum(numeric_only=True, axis=0)\n",
    "#Определяю наиболее востребованные квалификации\n",
    "q_fied_tot.loc[:,'Row_Total'] = q_fied_tot.sum(numeric_only=True, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>...</th>\n",
       "      <th>2419</th>\n",
       "      <th>2420</th>\n",
       "      <th>2421</th>\n",
       "      <th>2422</th>\n",
       "      <th>2423</th>\n",
       "      <th>2424</th>\n",
       "      <th>2425</th>\n",
       "      <th>2426</th>\n",
       "      <th>2427</th>\n",
       "      <th>Row_Total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2185</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11 rows × 2428 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "0      1  2  3  4  5  6  7  8  9  10  ...  2419  2420  2421  2422  2423  2424  \\\n",
       "1      0  0  0  0  0  0  0  0  0   0  ...     0     0     0     0     0     0   \n",
       "2      1  1  0  1  0  1  0  1  1   1  ...     0     0     0     0     0     0   \n",
       "3      0  0  0  0  0  0  0  0  0   0  ...     0     0     0     0     0     0   \n",
       "4      0  0  1  0  0  0  0  0  0   0  ...     0     0     0     0     0     0   \n",
       "5      0  0  0  0  0  0  0  0  0   0  ...     1     0     0     0     0     0   \n",
       "6      0  0  0  0  0  0  0  0  0   0  ...     0     0     0     0     0     0   \n",
       "7      0  0  0  0  0  0  0  0  0   0  ...     0     0     0     0     0     0   \n",
       "8      0  0  0  0  0  0  0  0  0   0  ...     0     0     0     0     0     0   \n",
       "9      0  0  0  0  0  0  0  0  0   0  ...     0     0     0     0     0     0   \n",
       "10     0  0  0  0  0  0  1  0  0   0  ...     0     0     0     0     0     0   \n",
       "Total  1  1  1  1  0  1  1  1  1   1  ...     1     0     0     0     0     0   \n",
       "\n",
       "0      2425  2426  2427  Row_Total  \n",
       "1         0     0     0        509  \n",
       "2         0     0     0        190  \n",
       "3         0     0     0        145  \n",
       "4         0     0     0        169  \n",
       "5         0     0     0        148  \n",
       "6         0     0     0        570  \n",
       "7         0     0     0        119  \n",
       "8         0     0     0        107  \n",
       "9         0     0     0         90  \n",
       "10        0     0     0        138  \n",
       "Total     0     0     0       2185  \n",
       "\n",
       "[11 rows x 2428 columns]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Общая таблица\n",
    "q_fied_tot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>q_numb</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    q_numb\n",
       "1      509\n",
       "2      190\n",
       "3      145\n",
       "4      169\n",
       "5      148\n",
       "6      570\n",
       "7      119\n",
       "8      107\n",
       "9       90\n",
       "10     138"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#наиболее востребованные квалификаии\n",
    "q_rang = q_fied_tot['Row_Total']\n",
    "q_rang = q_rang.drop('Total', axis=0)\n",
    "q_rang = pd.DataFrame(q_rang)\n",
    "q_rang.columns = ['q_numb']\n",
    "q_rang"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Total</th>\n",
       "      <td>242</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       pers\n",
       "Total   242"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#количество неработающих сотрудников\n",
    "d_work = (q_fied_tot == 0).astype(int).sum(axis=1)\n",
    "d_work = pd.DataFrame(d_work, columns=['pers'])\n",
    "d_work = d_work.iloc[[-1]]\n",
    "d_work"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "      <th>lvl</th>\n",
       "      <th>work_h</th>\n",
       "      <th>str</th>\n",
       "      <th>max_str</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3401</td>\n",
       "      <td>70</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3402</td>\n",
       "      <td>70</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3404</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3405</td>\n",
       "      <td>65</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3407</td>\n",
       "      <td>55</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2423</th>\n",
       "      <td>104635</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2424</th>\n",
       "      <td>104638</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2425</th>\n",
       "      <td>104640</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2426</th>\n",
       "      <td>104641</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2427</th>\n",
       "      <td>104642</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2427 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        pers  lvl  work_h  str  max_str\n",
       "1       3401   70      80    3        3\n",
       "2       3402   70      80    1        1\n",
       "3       3404    1      80    2        2\n",
       "4       3405   65      80    2        2\n",
       "5       3407   55      90    2        2\n",
       "...      ...  ...     ...  ...      ...\n",
       "2423  104635    1      80    3        3\n",
       "2424  104638    1      80    3        3\n",
       "2425  104640    1      80    3        3\n",
       "2426  104641    1      80    3        3\n",
       "2427  104642    1      80    3        3\n",
       "\n",
       "[2427 rows x 5 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Объединяю информацию по персоналу\n",
    "pers_inf = pd.merge(p_lvl, max_f, left_index=True, right_index=True, how=\"left\")\n",
    "pers_inf = pd.merge(pers_inf, starts, left_index=True, right_index=True, how=\"left\")\n",
    "pers_inf = pd.merge(pers_inf, m_starts, left_index=True, right_index=True, how=\"left\")\n",
    "pers_inf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "      <th>m_1</th>\n",
       "      <th>m_2</th>\n",
       "      <th>m_3</th>\n",
       "      <th>m_4</th>\n",
       "      <th>m_5</th>\n",
       "      <th>m_6</th>\n",
       "      <th>m_7</th>\n",
       "      <th>m_8</th>\n",
       "      <th>m_9</th>\n",
       "      <th>m_10</th>\n",
       "      <th>m_11</th>\n",
       "      <th>m_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3401</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3402</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3404</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3405</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3407</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2423</th>\n",
       "      <td>104635</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2424</th>\n",
       "      <td>104638</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2425</th>\n",
       "      <td>104640</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2426</th>\n",
       "      <td>104641</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2427</th>\n",
       "      <td>104642</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2427 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        pers  m_1  m_2  m_3  m_4  m_5  m_6  m_7  m_8  m_9  m_10  m_11  m_12\n",
       "1       3401    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2       3402    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "3       3404    0   60    0    0   60    0    0   60    0    39     0     0\n",
       "4       3405    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "5       3407    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "...      ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   ...   ...   ...\n",
       "2423  104635    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2424  104638    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2425  104640    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2426  104641    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2427  104642    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "\n",
       "[2427 rows x 13 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Желаемое время отпусков сотрудников по месцам\n",
    "wish_m = pd.merge(p_lvl, wishes, left_index=True, right_index=True, how=\"left\")\n",
    "wish_m = wish_m.drop('lvl',1)\n",
    "wish_m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "      <th>m_1</th>\n",
       "      <th>m_2</th>\n",
       "      <th>m_3</th>\n",
       "      <th>m_4</th>\n",
       "      <th>m_5</th>\n",
       "      <th>m_6</th>\n",
       "      <th>m_7</th>\n",
       "      <th>m_8</th>\n",
       "      <th>m_9</th>\n",
       "      <th>m_10</th>\n",
       "      <th>m_11</th>\n",
       "      <th>m_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3401</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3402</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3404</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3405</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3407</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2423</th>\n",
       "      <td>104635</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2424</th>\n",
       "      <td>104638</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2425</th>\n",
       "      <td>104640</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2426</th>\n",
       "      <td>104641</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2427</th>\n",
       "      <td>104642</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2427 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        pers  m_1  m_2  m_3  m_4  m_5  m_6  m_7  m_8  m_9  m_10  m_11  m_12\n",
       "1       3401    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2       3402    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "3       3404    0    3    0    0    3    0    0    1    0     3     0     0\n",
       "4       3405    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "5       3407    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "...      ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   ...   ...   ...\n",
       "2423  104635    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2424  104638    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2425  104640    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2426  104641    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "2427  104642    0    0    0    0    0    0    0    0    0     0     0     0\n",
       "\n",
       "[2427 rows x 13 columns]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#приоритет \n",
    "r_prior_m = pd.merge(p_lvl, r_prior, left_index=True, right_index=True, how=\"left\")\n",
    "r_prior_m = r_prior_m.drop('lvl',1)\n",
    "r_prior_m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "#затирать не хотел\n",
    "pers_inf_copy = pers_inf.copy()\n",
    "#максимальный уровень квалификаии (для формулы)\n",
    "max_lvl = pers_inf_copy['lvl'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "applications = pd.DataFrame(columns = ['pers', 'month', 'score', 'req_rest'])\n",
    "n=0\n",
    "\n",
    "for index, row in r_prior_m.iterrows():\n",
    "    pers = row['pers']\n",
    "    for col in r_prior_m.columns:\n",
    "        if (row[col] > 0) & (col != 'pers'):\n",
    "            rating = (4 - row[col])*(max_lvl + 1) + \\\n",
    "                p_lvl.loc[p_lvl['pers'] == pers]['lvl'].iloc[0]\n",
    "            req_rest = wish_m.loc[wish_m['pers'] == pers][col].iloc[0]\n",
    "\n",
    "            applications.loc[n] = [pers, col.split('_')[1], rating, req_rest]\n",
    "            n += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def func(df):\n",
    "    DF['total'] = df['oil'].cumsum()\n",
    "    return df\n",
    "    \n",
    "df = DF.GROUPBY['month'].apply(func)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "      <th>month</th>\n",
       "      <th>score</th>\n",
       "      <th>req_rest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>3606</td>\n",
       "      <td>4</td>\n",
       "      <td>343</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>4933</td>\n",
       "      <td>7</td>\n",
       "      <td>343</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1372</th>\n",
       "      <td>12522</td>\n",
       "      <td>4</td>\n",
       "      <td>343</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>12280</td>\n",
       "      <td>8</td>\n",
       "      <td>343</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>3486</td>\n",
       "      <td>8</td>\n",
       "      <td>343</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3166</th>\n",
       "      <td>95192</td>\n",
       "      <td>11</td>\n",
       "      <td>92</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3165</th>\n",
       "      <td>95192</td>\n",
       "      <td>8</td>\n",
       "      <td>92</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3164</th>\n",
       "      <td>95192</td>\n",
       "      <td>6</td>\n",
       "      <td>92</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3163</th>\n",
       "      <td>95192</td>\n",
       "      <td>2</td>\n",
       "      <td>92</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4566</th>\n",
       "      <td>104511</td>\n",
       "      <td>12</td>\n",
       "      <td>92</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4567 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        pers month score req_rest\n",
       "141     3606     4   343       78\n",
       "222     4933     7   343       73\n",
       "1372   12522     4   343       78\n",
       "973    12280     8   343       36\n",
       "51      3486     8   343       92\n",
       "...      ...   ...   ...      ...\n",
       "3166   95192    11    92       18\n",
       "3165   95192     8    92       36\n",
       "3164   95192     6    92       34\n",
       "3163   95192     2    92       21\n",
       "4566  104511    12    92       36\n",
       "\n",
       "[4567 rows x 4 columns]"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "applications = applications.sort_values(by='score', ascending = False)\n",
    "applications"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "      <th>lvl</th>\n",
       "      <th>work_h</th>\n",
       "      <th>str</th>\n",
       "      <th>max_str</th>\n",
       "      <th>m_1</th>\n",
       "      <th>m_2</th>\n",
       "      <th>m_3</th>\n",
       "      <th>m_4</th>\n",
       "      <th>m_5</th>\n",
       "      <th>m_6</th>\n",
       "      <th>m_7</th>\n",
       "      <th>m_8</th>\n",
       "      <th>m_9</th>\n",
       "      <th>m_10</th>\n",
       "      <th>m_11</th>\n",
       "      <th>m_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3401</td>\n",
       "      <td>70</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3402</td>\n",
       "      <td>70</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3404</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3405</td>\n",
       "      <td>65</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3407</td>\n",
       "      <td>55</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2422</th>\n",
       "      <td>104635</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2423</th>\n",
       "      <td>104638</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2424</th>\n",
       "      <td>104640</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2425</th>\n",
       "      <td>104641</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2426</th>\n",
       "      <td>104642</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2427 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        pers  lvl  work_h  str  max_str  m_1  m_2  m_3  m_4  m_5  m_6  m_7  \\\n",
       "0       3401   70      80    3        3    0    0    0    0    0    0    0   \n",
       "1       3402   70      80    1        1    0    0    0    0    0    0    0   \n",
       "2       3404    1      80    2        2    0    3    0    0    3    0    0   \n",
       "3       3405   65      80    2        2    0    0    0    0    0    0    0   \n",
       "4       3407   55      90    2        2    0    0    0    0    0    0    0   \n",
       "...      ...  ...     ...  ...      ...  ...  ...  ...  ...  ...  ...  ...   \n",
       "2422  104635    1      80    3        3    0    0    0    0    0    0    0   \n",
       "2423  104638    1      80    3        3    0    0    0    0    0    0    0   \n",
       "2424  104640    1      80    3        3    0    0    0    0    0    0    0   \n",
       "2425  104641    1      80    3        3    0    0    0    0    0    0    0   \n",
       "2426  104642    1      80    3        3    0    0    0    0    0    0    0   \n",
       "\n",
       "      m_8  m_9  m_10  m_11  m_12  \n",
       "0       0    0     0     0     0  \n",
       "1       0    0     0     0     0  \n",
       "2       1    0     3     0     0  \n",
       "3       0    0     0     0     0  \n",
       "4       0    0     0     0     0  \n",
       "...   ...  ...   ...   ...   ...  \n",
       "2422    0    0     0     0     0  \n",
       "2423    0    0     0     0     0  \n",
       "2424    0    0     0     0     0  \n",
       "2425    0    0     0     0     0  \n",
       "2426    0    0     0     0     0  \n",
       "\n",
       "[2427 rows x 17 columns]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#сцепляю сотрудников и приоритеты отпусков\n",
    "pers_prior = pers_inf_copy.merge(r_prior_m)\n",
    "pers_prior"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Модель и солвер"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "q_fied = q_fied.loc[:3]\n",
    "r_pers = r_pers.loc[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>634</td>\n",
       "      <td>584</td>\n",
       "      <td>676</td>\n",
       "      <td>670</td>\n",
       "      <td>580</td>\n",
       "      <td>746</td>\n",
       "      <td>736</td>\n",
       "      <td>731</td>\n",
       "      <td>714</td>\n",
       "      <td>684</td>\n",
       "      <td>629</td>\n",
       "      <td>707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>202</td>\n",
       "      <td>184</td>\n",
       "      <td>206</td>\n",
       "      <td>203</td>\n",
       "      <td>203</td>\n",
       "      <td>186</td>\n",
       "      <td>202</td>\n",
       "      <td>202</td>\n",
       "      <td>194</td>\n",
       "      <td>196</td>\n",
       "      <td>173</td>\n",
       "      <td>183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>202</td>\n",
       "      <td>184</td>\n",
       "      <td>206</td>\n",
       "      <td>203</td>\n",
       "      <td>203</td>\n",
       "      <td>186</td>\n",
       "      <td>202</td>\n",
       "      <td>202</td>\n",
       "      <td>194</td>\n",
       "      <td>196</td>\n",
       "      <td>173</td>\n",
       "      <td>183</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    0    1    2    3    4    5    6    7    8    9    10   11\n",
       "1  634  584  676  670  580  746  736  731  714  684  629  707\n",
       "2  202  184  206  203  203  186  202  202  194  196  173  183\n",
       "3  202  184  206  203  203  186  202  202  194  196  173  183"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "qual_hours = q_fied.T.mul(pers_inf_copy.work_h, axis=0)\n",
    "zeros_mask = (qual_hours != 0).any(axis=1)\n",
    "qual_hours = qual_hours[zeros_mask]\n",
    "\n",
    "# Сокращу для теста\n",
    "r_pers = r_pers/50\n",
    "r_pers = r_pers.astype('int64')\n",
    "qual_hours = qual_hours.sample(frac = 0.1)\n",
    "r_pers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    " # Create the mip solver with the SCIP backend.\n",
    "solver = pywraplp.Solver.CreateSolver('SCIP')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Variables\n",
    "# x[1,2] - worker 1 assigned to month 2\n",
    "x = {}\n",
    "for i in qual_hours.index.unique():\n",
    "    for j in r_pers.columns:\n",
    "        x[(i,j)] = solver.IntVar(0, 1, 'x_%i_%i' % (i, j))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Constraints\n",
    "# Sum of qualification hours every month doesnt exceed the month reqs\n",
    "for j in r_pers.columns:\n",
    "    for m in r_pers.index.unique():\n",
    "        solver.Add(\n",
    "            sum(x[(i, j)] * qual_hours.loc[i, m] for i in qual_hours.index.unique()) >= \n",
    "                r_pers.loc[m,j]\n",
    "        )\n",
    "    \n",
    "# # Sum of hours worker work can exceed his limit\n",
    "# for j in data['workers']:\n",
    "#     solver.Add(\n",
    "#         sum(x[(i, j)] * data['worker_hours'][i] for i in data['workers']) <= \n",
    "#         data['worker_hours'][j])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Int64Index([1, 2, 3], dtype='int64')"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "qualifications = r_pers.index.unique()\n",
    "qualifications"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "# obj_func = solver.Sum([x[(i, j)] * data['worker_hours'][i] \\\n",
    "#         for i in data['workers'] for j in data['months']])/sum(data['month_reqs'])\n",
    "# solver.Minimize(obj_func)\n",
    "\n",
    "obj_func = solver.Sum([x[(i, j)] * qual_hours.loc[i, m] \\\n",
    "            for i in qual_hours.index.unique() for j in r_pers.columns \\\n",
    "                       for m in qualifications])/sum(r_pers.loc[m])\n",
    "\n",
    "# m = 3\n",
    "# obj_func = solver.Sum([x[(i, j)] * qual_hours.loc[i, m] \\\n",
    "#             for i in qual_hours.index.unique() for j in r_pers.columns])/sum(r_pers.loc[m])\n",
    "\n",
    "solver.Minimize(obj_func)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "total_req_hours = {}\n",
    "total_assigned_hours = {}\n",
    "\n",
    "for m in qualifications:\n",
    "    total_req_hours[m] = 0\n",
    "    total_assigned_hours[m] = 0\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "timetable = pd.DataFrame(1, index=qual_hours.index, columns=[0,1,2,3,4,5,6,7,8,9,10,11])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "timetable = timetable.mul(pers_inf_copy[pers_inf_copy.index.isin(qual_hours.index)].work_h, axis=0)\n",
    "#timetable['pers'] = p_lvl['pers']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "84"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(timetable)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Month number 0\n",
      "  Квалификация  1\n",
      "    Назначенные работники:8 [2182, 1544, 1604, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 634\n",
      "    Присвоено часов в месяце: 640\n",
      "    Процент: 1.0094637223974763\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 202\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.188118811881188\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 202\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.188118811881188\n",
      "\n",
      "Время для отпуска:  82 \n",
      "\n",
      "Month number 1\n",
      "  Квалификация  1\n",
      "    Назначенные работники:8 [564, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 584\n",
      "    Присвоено часов в месяце: 630\n",
      "    Процент: 1.0787671232876712\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 184\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.3043478260869565\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 184\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.3043478260869565\n",
      "\n",
      "Время для отпуска:  158 \n",
      "\n",
      "Month number 2\n",
      "  Квалификация  1\n",
      "    Назначенные работники:9 [564, 1588, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 676\n",
      "    Присвоено часов в месяце: 710\n",
      "    Процент: 1.0502958579881656\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 206\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.1650485436893203\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 206\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.1650485436893203\n",
      "\n",
      "Время для отпуска:  102 \n",
      "\n",
      "Month number 3\n",
      "  Квалификация  1\n",
      "    Назначенные работники:9 [564, 1588, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 670\n",
      "    Присвоено часов в месяце: 710\n",
      "    Процент: 1.0597014925373134\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 203\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.1822660098522169\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 203\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.1822660098522169\n",
      "\n",
      "Время для отпуска:  114 \n",
      "\n",
      "Month number 4\n",
      "  Квалификация  1\n",
      "    Назначенные работники:8 [564, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 580\n",
      "    Присвоено часов в месяце: 630\n",
      "    Процент: 1.0862068965517242\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 203\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.1822660098522169\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 203\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.1822660098522169\n",
      "\n",
      "Время для отпуска:  124 \n",
      "\n",
      "Month number 5\n",
      "  Квалификация  1\n",
      "    Назначенные работники:10 [564, 1285, 1588, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 746\n",
      "    Присвоено часов в месяце: 790\n",
      "    Процент: 1.0589812332439679\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 186\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.2903225806451613\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 186\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.2903225806451613\n",
      "\n",
      "Время для отпуска:  152 \n",
      "\n",
      "Month number 6\n",
      "  Квалификация  1\n",
      "    Назначенные работники:10 [564, 1285, 1588, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 736\n",
      "    Присвоено часов в месяце: 790\n",
      "    Процент: 1.0733695652173914\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 202\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.188118811881188\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 202\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.188118811881188\n",
      "\n",
      "Время для отпуска:  130 \n",
      "\n",
      "Month number 7\n",
      "  Квалификация  1\n",
      "    Назначенные работники:10 [564, 1285, 1588, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 731\n",
      "    Присвоено часов в месяце: 790\n",
      "    Процент: 1.0807113543091655\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 202\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.188118811881188\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 202\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.188118811881188\n",
      "\n",
      "Время для отпуска:  135 \n",
      "\n",
      "Month number 8\n",
      "  Квалификация  1\n",
      "    Назначенные работники:9 [1588, 2182, 1544, 1604, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 714\n",
      "    Присвоено часов в месяце: 720\n",
      "    Процент: 1.0084033613445378\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 194\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.2371134020618557\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 194\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.2371134020618557\n",
      "\n",
      "Время для отпуска:  98 \n",
      "\n",
      "Month number 9\n",
      "  Квалификация  1\n",
      "    Назначенные работники:9 [564, 1588, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 684\n",
      "    Присвоено часов в месяце: 710\n",
      "    Процент: 1.0380116959064327\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 196\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.2244897959183674\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 196\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.2244897959183674\n",
      "\n",
      "Время для отпуска:  114 \n",
      "\n",
      "Month number 10\n",
      "  Квалификация  1\n",
      "    Назначенные работники:8 [564, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 629\n",
      "    Присвоено часов в месяце: 630\n",
      "    Процент: 1.0015898251192368\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:2 [1351, 57]\n",
      "    Нужно часов в месяце: 173\n",
      "    Присвоено часов в месяце: 180\n",
      "    Процент: 1.0404624277456647\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:2 [911, 234]\n",
      "    Нужно часов в месяце: 173\n",
      "    Присвоено часов в месяце: 180\n",
      "    Процент: 1.0404624277456647\n",
      "\n",
      "Время для отпуска:  15 \n",
      "\n",
      "Month number 11\n",
      "  Квалификация  1\n",
      "    Назначенные работники:9 [564, 1588, 2182, 1544, 2021, 224, 1273, 2171, 407]\n",
      "    Нужно часов в месяце: 707\n",
      "    Присвоено часов в месяце: 710\n",
      "    Процент: 1.0042432814710043\n",
      "\n",
      "  Квалификация  2\n",
      "    Назначенные работники:3 [99, 60, 121]\n",
      "    Нужно часов в месяце: 183\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.3114754098360655\n",
      "\n",
      "  Квалификация  3\n",
      "    Назначенные работники:3 [100, 895, 377]\n",
      "    Нужно часов в месяце: 183\n",
      "    Присвоено часов в месяце: 240\n",
      "    Процент: 1.3114754098360655\n",
      "\n",
      "Время для отпуска:  117 \n",
      "\n",
      "\n",
      "Time =  3331373  milliseconds\n",
      "\n",
      "***100% задач обеспечены ресурсами***\n"
     ]
    }
   ],
   "source": [
    "status = solver.Solve()\n",
    "\n",
    "holidays_time = {}\n",
    "\n",
    "if status == pywraplp.Solver.OPTIMAL:\n",
    "    num_months = 0\n",
    "    all_tasks_completed = False\n",
    "    \n",
    "    \n",
    "    for j in r_pers.columns:\n",
    "        print('Month number', j)\n",
    "        holidays_time[j] = 0\n",
    "        \n",
    "        for m in qualifications:\n",
    "            print ('  Квалификация ', m)\n",
    "            month_workers = []\n",
    "            month_assigned_hours = 0\n",
    "\n",
    "\n",
    "            for i in qual_hours.index.unique():\n",
    "                if x[i, j].solution_value() > 0:\n",
    "                    if qual_hours.loc[i, m] >0:\n",
    "                        month_workers.append(i)\n",
    "                        month_assigned_hours += qual_hours.loc[i, m]\n",
    "                        timetable.loc[i, j] = timetable.loc[i, j]- qual_hours.loc[i, m]\n",
    "\n",
    "            if month_assigned_hours > 0:\n",
    "                num_months += 1\n",
    "                \n",
    "                print('    Назначенные работники:{0}'.format(len(month_workers)), \n",
    "                      month_workers)\n",
    "                print ('    Нужно часов в месяце:', \n",
    "                       r_pers.loc[m,j])\n",
    "                print('    Присвоено часов в месяце:', \n",
    "                      month_assigned_hours)\n",
    "                print('    Процент:', \n",
    "                      month_assigned_hours/r_pers.loc[m,j])\n",
    "\n",
    "                print()\n",
    "            \n",
    "            total_req_hours[m] += r_pers.loc[m,j]\n",
    "            total_assigned_hours[m] += month_assigned_hours\n",
    "            \n",
    "            if total_assigned_hours[m] >= total_req_hours[m]:\n",
    "                all_tasks_completed = True\n",
    "            holidays_time[j] += month_assigned_hours - r_pers.loc[m,j]\n",
    "        \n",
    "        print ('Время для отпуска: ',holidays_time[j],'\\n')\n",
    "            \n",
    "    print()\n",
    "\n",
    "    print('Time = ', solver.WallTime(), ' milliseconds')\n",
    "    print ()\n",
    "    if all_tasks_completed:\n",
    "        print ('***100% задач обеспечены ресурсами***')\n",
    "else:\n",
    "    print('The problem does not have an optimal solution.')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Распределение отпусков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "      <th>month</th>\n",
       "      <th>score</th>\n",
       "      <th>req_rest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>3606</td>\n",
       "      <td>4</td>\n",
       "      <td>343</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>4933</td>\n",
       "      <td>7</td>\n",
       "      <td>343</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1372</th>\n",
       "      <td>12522</td>\n",
       "      <td>4</td>\n",
       "      <td>343</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>12280</td>\n",
       "      <td>8</td>\n",
       "      <td>343</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>3486</td>\n",
       "      <td>8</td>\n",
       "      <td>343</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       pers month score req_rest\n",
       "141    3606     4   343       78\n",
       "222    4933     7   343       73\n",
       "1372  12522     4   343       78\n",
       "973   12280     8   343       36\n",
       "51     3486     8   343       92"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "applications.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pers</th>\n",
       "      <th>month</th>\n",
       "      <th>score</th>\n",
       "      <th>req_rest</th>\n",
       "      <th>index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3606</td>\n",
       "      <td>4</td>\n",
       "      <td>343</td>\n",
       "      <td>78</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3606</td>\n",
       "      <td>10</td>\n",
       "      <td>161</td>\n",
       "      <td>44</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3606</td>\n",
       "      <td>6</td>\n",
       "      <td>161</td>\n",
       "      <td>36</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3606</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>39</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4933</td>\n",
       "      <td>7</td>\n",
       "      <td>343</td>\n",
       "      <td>73</td>\n",
       "      <td>176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4562</th>\n",
       "      <td>95225</td>\n",
       "      <td>4</td>\n",
       "      <td>92</td>\n",
       "      <td>55</td>\n",
       "      <td>1716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4563</th>\n",
       "      <td>95192</td>\n",
       "      <td>11</td>\n",
       "      <td>92</td>\n",
       "      <td>18</td>\n",
       "      <td>1713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4564</th>\n",
       "      <td>95192</td>\n",
       "      <td>8</td>\n",
       "      <td>92</td>\n",
       "      <td>36</td>\n",
       "      <td>1713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4565</th>\n",
       "      <td>95192</td>\n",
       "      <td>6</td>\n",
       "      <td>92</td>\n",
       "      <td>34</td>\n",
       "      <td>1713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4566</th>\n",
       "      <td>95192</td>\n",
       "      <td>2</td>\n",
       "      <td>92</td>\n",
       "      <td>21</td>\n",
       "      <td>1713</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4567 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       pers month score req_rest  index\n",
       "0      3606     4   343       78    114\n",
       "1      3606    10   161       44    114\n",
       "2      3606     6   161       36    114\n",
       "3      3606     1   161       39    114\n",
       "4      4933     7   343       73    176\n",
       "...     ...   ...   ...      ...    ...\n",
       "4562  95225     4    92       55   1716\n",
       "4563  95192    11    92       18   1713\n",
       "4564  95192     8    92       36   1713\n",
       "4565  95192     6    92       34   1713\n",
       "4566  95192     2    92       21   1713\n",
       "\n",
       "[4567 rows x 5 columns]"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "applications"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "78\n",
      "44\n",
      "36\n",
      "39\n",
      "73\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "78\n",
      "73\n",
      "23\n",
      "36\n",
      "28\n",
      "36\n",
      "92\n",
      "36\n",
      "55\n",
      "68\n",
      "34\n",
      "18\n",
      "42\n",
      "47\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "76\n",
      "39\n",
      "39\n",
      "39\n",
      "44\n",
      "34\n",
      "31\n",
      "18\n",
      "36\n",
      "18\n",
      "49\n",
      "39\n",
      "73\n",
      "42\n",
      "42\n",
      "47\n",
      "36\n",
      "52\n",
      "18\n",
      "36\n",
      "39\n",
      "73\n",
      "42\n",
      "36\n",
      "73\n",
      "18\n",
      "36\n",
      "39\n",
      "26\n",
      "36\n",
      "57\n",
      "36\n",
      "57\n",
      "73\n",
      "18\n",
      "47\n",
      "73\n",
      "73\n",
      "36\n",
      "44\n",
      "36\n",
      "39\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "18\n",
      "36\n",
      "52\n",
      "18\n",
      "78\n",
      "18\n",
      "42\n",
      "73\n",
      "36\n",
      "31\n",
      "42\n",
      "78\n",
      "36\n",
      "47\n",
      "57\n",
      "44\n",
      "57\n",
      "39\n",
      "52\n",
      "26\n",
      "18\n",
      "36\n",
      "36\n",
      "84\n",
      "73\n",
      "36\n",
      "76\n",
      "73\n",
      "44\n",
      "28\n",
      "65\n",
      "28\n",
      "23\n",
      "73\n",
      "36\n",
      "55\n",
      "120\n",
      "23\n",
      "23\n",
      "39\n",
      "39\n",
      "49\n",
      "39\n",
      "21\n",
      "57\n",
      "84\n",
      "39\n",
      "36\n",
      "18\n",
      "55\n",
      "36\n",
      "55\n",
      "55\n",
      "65\n",
      "42\n",
      "36\n",
      "42\n",
      "65\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "84\n",
      "73\n",
      "36\n",
      "36\n",
      "42\n",
      "55\n",
      "78\n",
      "18\n",
      "18\n",
      "31\n",
      "36\n",
      "52\n",
      "31\n",
      "31\n",
      "42\n",
      "26\n",
      "55\n",
      "39\n",
      "55\n",
      "39\n",
      "36\n",
      "26\n",
      "36\n",
      "28\n",
      "57\n",
      "39\n",
      "39\n",
      "39\n",
      "42\n",
      "36\n",
      "57\n",
      "36\n",
      "52\n",
      "36\n",
      "76\n",
      "73\n",
      "36\n",
      "68\n",
      "26\n",
      "57\n",
      "36\n",
      "73\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "39\n",
      "36\n",
      "63\n",
      "18\n",
      "68\n",
      "28\n",
      "18\n",
      "34\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "73\n",
      "71\n",
      "39\n",
      "36\n",
      "81\n",
      "36\n",
      "36\n",
      "78\n",
      "39\n",
      "36\n",
      "72\n",
      "72\n",
      "72\n",
      "39\n",
      "44\n",
      "36\n",
      "31\n",
      "39\n",
      "55\n",
      "55\n",
      "34\n",
      "39\n",
      "73\n",
      "36\n",
      "73\n",
      "76\n",
      "65\n",
      "107\n",
      "73\n",
      "39\n",
      "73\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "55\n",
      "18\n",
      "73\n",
      "42\n",
      "42\n",
      "42\n",
      "60\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "81\n",
      "47\n",
      "55\n",
      "36\n",
      "28\n",
      "18\n",
      "18\n",
      "26\n",
      "18\n",
      "21\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "39\n",
      "21\n",
      "55\n",
      "55\n",
      "23\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "52\n",
      "36\n",
      "49\n",
      "42\n",
      "52\n",
      "21\n",
      "26\n",
      "68\n",
      "42\n",
      "36\n",
      "73\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "39\n",
      "39\n",
      "28\n",
      "26\n",
      "55\n",
      "73\n",
      "47\n",
      "36\n",
      "26\n",
      "78\n",
      "65\n",
      "36\n",
      "84\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "63\n",
      "36\n",
      "36\n",
      "47\n",
      "73\n",
      "55\n",
      "36\n",
      "18\n",
      "78\n",
      "55\n",
      "36\n",
      "65\n",
      "57\n",
      "26\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "55\n",
      "52\n",
      "39\n",
      "36\n",
      "84\n",
      "34\n",
      "42\n",
      "31\n",
      "42\n",
      "65\n",
      "73\n",
      "39\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "63\n",
      "36\n",
      "31\n",
      "21\n",
      "26\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "78\n",
      "42\n",
      "65\n",
      "44\n",
      "47\n",
      "36\n",
      "47\n",
      "73\n",
      "42\n",
      "36\n",
      "44\n",
      "73\n",
      "73\n",
      "36\n",
      "39\n",
      "36\n",
      "39\n",
      "34\n",
      "73\n",
      "18\n",
      "55\n",
      "36\n",
      "78\n",
      "23\n",
      "23\n",
      "42\n",
      "42\n",
      "23\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "73\n",
      "68\n",
      "36\n",
      "42\n",
      "31\n",
      "36\n",
      "47\n",
      "57\n",
      "52\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "31\n",
      "57\n",
      "49\n",
      "28\n",
      "44\n",
      "18\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "81\n",
      "52\n",
      "36\n",
      "81\n",
      "39\n",
      "39\n",
      "36\n",
      "73\n",
      "39\n",
      "63\n",
      "39\n",
      "36\n",
      "44\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "23\n",
      "21\n",
      "49\n",
      "36\n",
      "49\n",
      "36\n",
      "57\n",
      "28\n",
      "42\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "42\n",
      "36\n",
      "73\n",
      "39\n",
      "23\n",
      "21\n",
      "21\n",
      "39\n",
      "73\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "42\n",
      "55\n",
      "63\n",
      "23\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "73\n",
      "36\n",
      "81\n",
      "39\n",
      "21\n",
      "21\n",
      "36\n",
      "39\n",
      "26\n",
      "68\n",
      "49\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "49\n",
      "23\n",
      "73\n",
      "76\n",
      "73\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "39\n",
      "26\n",
      "57\n",
      "60\n",
      "71\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "57\n",
      "36\n",
      "52\n",
      "55\n",
      "55\n",
      "18\n",
      "36\n",
      "73\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "55\n",
      "39\n",
      "55\n",
      "60\n",
      "39\n",
      "73\n",
      "39\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "39\n",
      "36\n",
      "57\n",
      "57\n",
      "73\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "42\n",
      "71\n",
      "73\n",
      "18\n",
      "55\n",
      "36\n",
      "55\n",
      "63\n",
      "55\n",
      "36\n",
      "36\n",
      "57\n",
      "39\n",
      "73\n",
      "18\n",
      "57\n",
      "57\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "28\n",
      "55\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "26\n",
      "57\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "73\n",
      "39\n",
      "36\n",
      "42\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "78\n",
      "55\n",
      "36\n",
      "21\n",
      "18\n",
      "57\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "76\n",
      "39\n",
      "36\n",
      "68\n",
      "26\n",
      "36\n",
      "52\n",
      "36\n",
      "36\n",
      "26\n",
      "55\n",
      "36\n",
      "63\n",
      "55\n",
      "55\n",
      "36\n",
      "42\n",
      "26\n",
      "39\n",
      "39\n",
      "36\n",
      "42\n",
      "44\n",
      "36\n",
      "55\n",
      "44\n",
      "73\n",
      "18\n",
      "36\n",
      "73\n",
      "18\n",
      "18\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "42\n",
      "55\n",
      "42\n",
      "55\n",
      "76\n",
      "26\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "42\n",
      "26\n",
      "39\n",
      "78\n",
      "42\n",
      "36\n",
      "36\n",
      "57\n",
      "39\n",
      "44\n",
      "42\n",
      "42\n",
      "73\n",
      "71\n",
      "36\n",
      "26\n",
      "28\n",
      "26\n",
      "28\n",
      "36\n",
      "73\n",
      "36\n",
      "57\n",
      "36\n",
      "55\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "71\n",
      "36\n",
      "55\n",
      "36\n",
      "49\n",
      "23\n",
      "73\n",
      "49\n",
      "23\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "42\n",
      "60\n",
      "36\n",
      "42\n",
      "36\n",
      "28\n",
      "23\n",
      "36\n",
      "18\n",
      "36\n",
      "55\n",
      "73\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "57\n",
      "57\n",
      "39\n",
      "73\n",
      "36\n",
      "39\n",
      "92\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "55\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "18\n",
      "55\n",
      "73\n",
      "55\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "57\n",
      "39\n",
      "39\n",
      "39\n",
      "44\n",
      "39\n",
      "36\n",
      "36\n",
      "39\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "21\n",
      "18\n",
      "99\n",
      "26\n",
      "34\n",
      "26\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "49\n",
      "36\n",
      "42\n",
      "18\n",
      "39\n",
      "73\n",
      "39\n",
      "39\n",
      "86\n",
      "36\n",
      "73\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "34\n",
      "42\n",
      "36\n",
      "34\n",
      "21\n",
      "81\n",
      "55\n",
      "73\n",
      "36\n",
      "73\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "68\n",
      "31\n",
      "31\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "81\n",
      "28\n",
      "73\n",
      "36\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "39\n",
      "36\n",
      "57\n",
      "57\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "78\n",
      "55\n",
      "55\n",
      "55\n",
      "36\n",
      "57\n",
      "55\n",
      "31\n",
      "36\n",
      "57\n",
      "55\n",
      "36\n",
      "81\n",
      "52\n",
      "34\n",
      "55\n",
      "55\n",
      "18\n",
      "55\n",
      "73\n",
      "36\n",
      "36\n",
      "39\n",
      "42\n",
      "26\n",
      "42\n",
      "28\n",
      "36\n",
      "55\n",
      "36\n",
      "26\n",
      "39\n",
      "73\n",
      "49\n",
      "36\n",
      "49\n",
      "49\n",
      "55\n",
      "73\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "81\n",
      "36\n",
      "36\n",
      "31\n",
      "73\n",
      "55\n",
      "21\n",
      "55\n",
      "36\n",
      "73\n",
      "36\n",
      "71\n",
      "55\n",
      "73\n",
      "42\n",
      "55\n",
      "57\n",
      "21\n",
      "57\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "73\n",
      "36\n",
      "36\n",
      "57\n",
      "57\n",
      "36\n",
      "73\n",
      "71\n",
      "36\n",
      "36\n",
      "39\n",
      "73\n",
      "36\n",
      "73\n",
      "71\n",
      "73\n",
      "36\n",
      "34\n",
      "36\n",
      "55\n",
      "18\n",
      "39\n",
      "36\n",
      "57\n",
      "39\n",
      "57\n",
      "36\n",
      "76\n",
      "21\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "39\n",
      "39\n",
      "57\n",
      "73\n",
      "39\n",
      "71\n",
      "73\n",
      "36\n",
      "55\n",
      "81\n",
      "36\n",
      "36\n",
      "55\n",
      "52\n",
      "36\n",
      "18\n",
      "36\n",
      "73\n",
      "36\n",
      "42\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "73\n",
      "39\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "23\n",
      "36\n",
      "39\n",
      "23\n",
      "23\n",
      "68\n",
      "36\n",
      "57\n",
      "18\n",
      "73\n",
      "57\n",
      "76\n",
      "36\n",
      "63\n",
      "21\n",
      "73\n",
      "36\n",
      "42\n",
      "55\n",
      "42\n",
      "36\n",
      "39\n",
      "39\n",
      "39\n",
      "28\n",
      "31\n",
      "31\n",
      "39\n",
      "36\n",
      "73\n",
      "81\n",
      "73\n",
      "28\n",
      "39\n",
      "73\n",
      "26\n",
      "36\n",
      "1033\n",
      "36\n",
      "36\n",
      "36\n",
      "47\n",
      "18\n",
      "36\n",
      "47\n",
      "39\n",
      "73\n",
      "34\n",
      "18\n",
      "31\n",
      "23\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "18\n",
      "39\n",
      "18\n",
      "36\n",
      "36\n",
      "81\n",
      "73\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "63\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "39\n",
      "39\n",
      "36\n",
      "73\n",
      "39\n",
      "52\n",
      "34\n",
      "42\n",
      "23\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "57\n",
      "57\n",
      "39\n",
      "21\n",
      "47\n",
      "42\n",
      "36\n",
      "63\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "65\n",
      "42\n",
      "39\n",
      "42\n",
      "39\n",
      "57\n",
      "73\n",
      "21\n",
      "36\n",
      "18\n",
      "55\n",
      "57\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "68\n",
      "42\n",
      "42\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "76\n",
      "36\n",
      "34\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "57\n",
      "39\n",
      "39\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "73\n",
      "55\n",
      "73\n",
      "52\n",
      "36\n",
      "36\n",
      "57\n",
      "55\n",
      "55\n",
      "28\n",
      "65\n",
      "57\n",
      "55\n",
      "73\n",
      "18\n",
      "36\n",
      "39\n",
      "21\n",
      "39\n",
      "73\n",
      "55\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "26\n",
      "26\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "57\n",
      "57\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "26\n",
      "49\n",
      "76\n",
      "21\n",
      "31\n",
      "36\n",
      "26\n",
      "42\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "44\n",
      "36\n",
      "39\n",
      "36\n",
      "73\n",
      "36\n",
      "73\n",
      "18\n",
      "55\n",
      "52\n",
      "47\n",
      "36\n",
      "73\n",
      "55\n",
      "76\n",
      "36\n",
      "21\n",
      "39\n",
      "21\n",
      "52\n",
      "36\n",
      "31\n",
      "73\n",
      "39\n",
      "36\n",
      "34\n",
      "57\n",
      "36\n",
      "57\n",
      "52\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "81\n",
      "18\n",
      "21\n",
      "73\n",
      "18\n",
      "36\n",
      "60\n",
      "73\n",
      "36\n",
      "36\n",
      "42\n",
      "36\n",
      "42\n",
      "39\n",
      "26\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "81\n",
      "73\n",
      "57\n",
      "65\n",
      "31\n",
      "63\n",
      "49\n",
      "47\n",
      "31\n",
      "31\n",
      "28\n",
      "73\n",
      "36\n",
      "39\n",
      "36\n",
      "73\n",
      "18\n",
      "36\n",
      "18\n",
      "73\n",
      "55\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "39\n",
      "65\n",
      "65\n",
      "52\n",
      "39\n",
      "73\n",
      "36\n",
      "36\n",
      "52\n",
      "44\n",
      "55\n",
      "28\n",
      "73\n",
      "36\n",
      "39\n",
      "36\n",
      "73\n",
      "36\n",
      "52\n",
      "36\n",
      "73\n",
      "44\n",
      "36\n",
      "57\n",
      "28\n",
      "36\n",
      "39\n",
      "76\n",
      "18\n",
      "57\n",
      "36\n",
      "36\n",
      "36\n",
      "34\n",
      "36\n",
      "36\n",
      "81\n",
      "26\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "26\n",
      "39\n",
      "36\n",
      "63\n",
      "36\n",
      "63\n",
      "55\n",
      "63\n",
      "39\n",
      "39\n",
      "21\n",
      "28\n",
      "78\n",
      "31\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "57\n",
      "39\n",
      "21\n",
      "57\n",
      "78\n",
      "36\n",
      "44\n",
      "26\n",
      "55\n",
      "18\n",
      "18\n",
      "55\n",
      "81\n",
      "47\n",
      "36\n",
      "73\n",
      "42\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "39\n",
      "73\n",
      "42\n",
      "23\n",
      "84\n",
      "73\n",
      "55\n",
      "55\n",
      "60\n",
      "18\n",
      "23\n",
      "26\n",
      "49\n",
      "36\n",
      "36\n",
      "47\n",
      "36\n",
      "57\n",
      "26\n",
      "47\n",
      "18\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "31\n",
      "39\n",
      "55\n",
      "42\n",
      "52\n",
      "34\n",
      "39\n",
      "55\n",
      "42\n",
      "36\n",
      "26\n",
      "28\n",
      "28\n",
      "36\n",
      "26\n",
      "76\n",
      "39\n",
      "73\n",
      "57\n",
      "73\n",
      "55\n",
      "18\n",
      "36\n",
      "65\n",
      "39\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "57\n",
      "42\n",
      "65\n",
      "55\n",
      "36\n",
      "57\n",
      "36\n",
      "57\n",
      "65\n",
      "73\n",
      "36\n",
      "73\n",
      "18\n",
      "76\n",
      "18\n",
      "55\n",
      "36\n",
      "86\n",
      "39\n",
      "36\n",
      "78\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "26\n",
      "34\n",
      "73\n",
      "55\n",
      "26\n",
      "31\n",
      "71\n",
      "55\n",
      "36\n",
      "55\n",
      "57\n",
      "47\n",
      "36\n",
      "47\n",
      "78\n",
      "42\n",
      "73\n",
      "73\n",
      "36\n",
      "39\n",
      "36\n",
      "55\n",
      "36\n",
      "73\n",
      "18\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "44\n",
      "31\n",
      "26\n",
      "36\n",
      "71\n",
      "39\n",
      "36\n",
      "36\n",
      "21\n",
      "21\n",
      "23\n",
      "21\n",
      "23\n",
      "18\n",
      "18\n",
      "49\n",
      "18\n",
      "21\n",
      "36\n",
      "18\n",
      "31\n",
      "26\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "73\n",
      "26\n",
      "47\n",
      "76\n",
      "73\n",
      "73\n",
      "31\n",
      "36\n",
      "42\n",
      "36\n",
      "65\n",
      "18\n",
      "26\n",
      "36\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "39\n",
      "76\n",
      "36\n",
      "39\n",
      "39\n",
      "73\n",
      "36\n",
      "26\n",
      "21\n",
      "26\n",
      "52\n",
      "26\n",
      "39\n",
      "39\n",
      "36\n",
      "73\n",
      "36\n",
      "18\n",
      "36\n",
      "73\n",
      "26\n",
      "36\n",
      "47\n",
      "42\n",
      "39\n",
      "28\n",
      "44\n",
      "57\n",
      "55\n",
      "36\n",
      "81\n",
      "36\n",
      "26\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "42\n",
      "73\n",
      "42\n",
      "36\n",
      "68\n",
      "31\n",
      "31\n",
      "52\n",
      "44\n",
      "49\n",
      "36\n",
      "73\n",
      "18\n",
      "18\n",
      "36\n",
      "18\n",
      "18\n",
      "81\n",
      "36\n",
      "36\n",
      "34\n",
      "76\n",
      "73\n",
      "36\n",
      "73\n",
      "36\n",
      "73\n",
      "52\n",
      "73\n",
      "36\n",
      "71\n",
      "55\n",
      "39\n",
      "60\n",
      "42\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "65\n",
      "36\n",
      "36\n",
      "73\n",
      "39\n",
      "36\n",
      "23\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "52\n",
      "31\n",
      "21\n",
      "21\n",
      "18\n",
      "18\n",
      "26\n",
      "39\n",
      "21\n",
      "55\n",
      "52\n",
      "73\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "34\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "39\n",
      "36\n",
      "39\n",
      "47\n",
      "36\n",
      "36\n",
      "39\n",
      "57\n",
      "26\n",
      "39\n",
      "39\n",
      "18\n",
      "39\n",
      "36\n",
      "28\n",
      "39\n",
      "36\n",
      "44\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "44\n",
      "36\n",
      "36\n",
      "63\n",
      "47\n",
      "36\n",
      "36\n",
      "73\n",
      "23\n",
      "36\n",
      "39\n",
      "65\n",
      "84\n",
      "49\n",
      "36\n",
      "28\n",
      "63\n",
      "42\n",
      "36\n",
      "49\n",
      "52\n",
      "44\n",
      "36\n",
      "49\n",
      "39\n",
      "18\n",
      "18\n",
      "36\n",
      "57\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "23\n",
      "36\n",
      "55\n",
      "73\n",
      "23\n",
      "39\n",
      "73\n",
      "18\n",
      "36\n",
      "55\n",
      "39\n",
      "39\n",
      "21\n",
      "23\n",
      "39\n",
      "49\n",
      "36\n",
      "42\n",
      "36\n",
      "26\n",
      "28\n",
      "39\n",
      "26\n",
      "23\n",
      "31\n",
      "57\n",
      "39\n",
      "57\n",
      "39\n",
      "36\n",
      "28\n",
      "36\n",
      "36\n",
      "57\n",
      "21\n",
      "36\n",
      "57\n",
      "65\n",
      "65\n",
      "36\n",
      "84\n",
      "28\n",
      "28\n",
      "71\n",
      "55\n",
      "55\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "39\n",
      "73\n",
      "18\n",
      "55\n",
      "36\n",
      "73\n",
      "57\n",
      "18\n",
      "36\n",
      "73\n",
      "21\n",
      "34\n",
      "73\n",
      "36\n",
      "73\n",
      "26\n",
      "36\n",
      "21\n",
      "26\n",
      "42\n",
      "39\n",
      "44\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "39\n",
      "73\n",
      "36\n",
      "18\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "26\n",
      "57\n",
      "39\n",
      "36\n",
      "36\n",
      "86\n",
      "42\n",
      "73\n",
      "36\n",
      "36\n",
      "73\n",
      "18\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "71\n",
      "36\n",
      "39\n",
      "34\n",
      "55\n",
      "42\n",
      "47\n",
      "36\n",
      "44\n",
      "36\n",
      "39\n",
      "55\n",
      "57\n",
      "47\n",
      "47\n",
      "36\n",
      "36\n",
      "39\n",
      "26\n",
      "34\n",
      "26\n",
      "21\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "18\n",
      "42\n",
      "73\n",
      "39\n",
      "73\n",
      "36\n",
      "73\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "57\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "39\n",
      "76\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "39\n",
      "39\n",
      "36\n",
      "28\n",
      "39\n",
      "18\n",
      "28\n",
      "44\n",
      "52\n",
      "78\n",
      "39\n",
      "26\n",
      "21\n",
      "18\n",
      "78\n",
      "39\n",
      "39\n",
      "21\n",
      "55\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "57\n",
      "63\n",
      "36\n",
      "55\n",
      "73\n",
      "52\n",
      "42\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "55\n",
      "21\n",
      "36\n",
      "39\n",
      "36\n",
      "73\n",
      "18\n",
      "23\n",
      "18\n",
      "36\n",
      "73\n",
      "57\n",
      "57\n",
      "55\n",
      "55\n",
      "55\n",
      "36\n",
      "76\n",
      "31\n",
      "36\n",
      "21\n",
      "44\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "39\n",
      "28\n",
      "65\n",
      "21\n",
      "63\n",
      "39\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "55\n",
      "18\n",
      "36\n",
      "18\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "57\n",
      "18\n",
      "44\n",
      "36\n",
      "28\n",
      "65\n",
      "26\n",
      "36\n",
      "73\n",
      "21\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "18\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "92\n",
      "36\n",
      "55\n",
      "76\n",
      "39\n",
      "36\n",
      "21\n",
      "39\n",
      "57\n",
      "39\n",
      "21\n",
      "21\n",
      "57\n",
      "73\n",
      "55\n",
      "55\n",
      "49\n",
      "23\n",
      "18\n",
      "36\n",
      "39\n",
      "57\n",
      "52\n",
      "52\n",
      "26\n",
      "57\n",
      "55\n",
      "36\n",
      "36\n",
      "73\n",
      "18\n",
      "36\n",
      "36\n",
      "73\n",
      "39\n",
      "36\n",
      "39\n",
      "39\n",
      "42\n",
      "52\n",
      "36\n",
      "55\n",
      "39\n",
      "57\n",
      "73\n",
      "36\n",
      "36\n",
      "39\n",
      "28\n",
      "28\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "44\n",
      "39\n",
      "36\n",
      "36\n",
      "76\n",
      "36\n",
      "54\n",
      "36\n",
      "68\n",
      "28\n",
      "26\n",
      "36\n",
      "68\n",
      "73\n",
      "36\n",
      "34\n",
      "36\n",
      "34\n",
      "18\n",
      "36\n",
      "18\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "23\n",
      "36\n",
      "42\n",
      "42\n",
      "18\n",
      "26\n",
      "28\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "44\n",
      "57\n",
      "23\n",
      "57\n",
      "68\n",
      "57\n",
      "57\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "39\n",
      "57\n",
      "36\n",
      "55\n",
      "55\n",
      "18\n",
      "18\n",
      "39\n",
      "34\n",
      "39\n",
      "34\n",
      "31\n",
      "21\n",
      "31\n",
      "31\n",
      "39\n",
      "21\n",
      "73\n",
      "18\n",
      "36\n",
      "36\n",
      "42\n",
      "55\n",
      "49\n",
      "44\n",
      "36\n",
      "57\n",
      "36\n",
      "31\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "68\n",
      "73\n",
      "36\n",
      "44\n",
      "57\n",
      "44\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "57\n",
      "73\n",
      "39\n",
      "36\n",
      "31\n",
      "76\n",
      "21\n",
      "31\n",
      "36\n",
      "26\n",
      "23\n",
      "49\n",
      "36\n",
      "31\n",
      "39\n",
      "65\n",
      "26\n",
      "68\n",
      "44\n",
      "42\n",
      "36\n",
      "57\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "55\n",
      "18\n",
      "26\n",
      "26\n",
      "18\n",
      "39\n",
      "60\n",
      "36\n",
      "28\n",
      "31\n",
      "26\n",
      "55\n",
      "39\n",
      "23\n",
      "39\n",
      "55\n",
      "73\n",
      "36\n",
      "52\n",
      "44\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "34\n",
      "36\n",
      "18\n",
      "31\n",
      "31\n",
      "31\n",
      "73\n",
      "55\n",
      "21\n",
      "36\n",
      "76\n",
      "36\n",
      "28\n",
      "42\n",
      "36\n",
      "55\n",
      "39\n",
      "39\n",
      "55\n",
      "28\n",
      "26\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "42\n",
      "76\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "39\n",
      "63\n",
      "21\n",
      "36\n",
      "60\n",
      "55\n",
      "42\n",
      "49\n",
      "47\n",
      "42\n",
      "55\n",
      "18\n",
      "55\n",
      "21\n",
      "36\n",
      "21\n",
      "73\n",
      "36\n",
      "36\n",
      "76\n",
      "18\n",
      "36\n",
      "36\n",
      "21\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "73\n",
      "36\n",
      "31\n",
      "57\n",
      "36\n",
      "57\n",
      "57\n",
      "47\n",
      "36\n",
      "36\n",
      "26\n",
      "36\n",
      "81\n",
      "49\n",
      "36\n",
      "68\n",
      "55\n",
      "60\n",
      "36\n",
      "28\n",
      "26\n",
      "57\n",
      "36\n",
      "26\n",
      "47\n",
      "49\n",
      "31\n",
      "36\n",
      "28\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "52\n",
      "52\n",
      "39\n",
      "73\n",
      "36\n",
      "23\n",
      "36\n",
      "36\n",
      "39\n",
      "47\n",
      "39\n",
      "57\n",
      "63\n",
      "36\n",
      "52\n",
      "36\n",
      "39\n",
      "31\n",
      "21\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "39\n",
      "44\n",
      "42\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "71\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "18\n",
      "36\n",
      "18\n",
      "55\n",
      "49\n",
      "42\n",
      "36\n",
      "76\n",
      "21\n",
      "23\n",
      "36\n",
      "76\n",
      "57\n",
      "39\n",
      "18\n",
      "36\n",
      "36\n",
      "63\n",
      "47\n",
      "36\n",
      "31\n",
      "36\n",
      "42\n",
      "36\n",
      "42\n",
      "73\n",
      "39\n",
      "39\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "26\n",
      "36\n",
      "18\n",
      "39\n",
      "39\n",
      "36\n",
      "21\n",
      "34\n",
      "36\n",
      "73\n",
      "39\n",
      "73\n",
      "73\n",
      "91\n",
      "39\n",
      "42\n",
      "73\n",
      "18\n",
      "81\n",
      "36\n",
      "65\n",
      "86\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "60\n",
      "39\n",
      "55\n",
      "73\n",
      "36\n",
      "36\n",
      "71\n",
      "39\n",
      "26\n",
      "36\n",
      "42\n",
      "36\n",
      "73\n",
      "36\n",
      "73\n",
      "81\n",
      "73\n",
      "28\n",
      "73\n",
      "36\n",
      "65\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "18\n",
      "60\n",
      "36\n",
      "36\n",
      "47\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "55\n",
      "36\n",
      "73\n",
      "73\n",
      "49\n",
      "31\n",
      "31\n",
      "31\n",
      "31\n",
      "36\n",
      "55\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "26\n",
      "44\n",
      "36\n",
      "36\n",
      "28\n",
      "36\n",
      "42\n",
      "36\n",
      "73\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "18\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "18\n",
      "55\n",
      "31\n",
      "18\n",
      "36\n",
      "44\n",
      "47\n",
      "57\n",
      "57\n",
      "31\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "28\n",
      "42\n",
      "84\n",
      "31\n",
      "31\n",
      "31\n",
      "31\n",
      "57\n",
      "36\n",
      "55\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "18\n",
      "39\n",
      "34\n",
      "55\n",
      "68\n",
      "42\n",
      "28\n",
      "63\n",
      "36\n",
      "42\n",
      "36\n",
      "60\n",
      "36\n",
      "18\n",
      "68\n",
      "39\n",
      "31\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "60\n",
      "36\n",
      "36\n",
      "71\n",
      "26\n",
      "26\n",
      "36\n",
      "36\n",
      "55\n",
      "49\n",
      "23\n",
      "18\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "18\n",
      "76\n",
      "36\n",
      "55\n",
      "21\n",
      "39\n",
      "36\n",
      "39\n",
      "39\n",
      "39\n",
      "71\n",
      "39\n",
      "36\n",
      "36\n",
      "23\n",
      "60\n",
      "36\n",
      "44\n",
      "44\n",
      "36\n",
      "55\n",
      "39\n",
      "21\n",
      "36\n",
      "36\n",
      "39\n",
      "57\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "42\n",
      "39\n",
      "34\n",
      "36\n",
      "18\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "55\n",
      "21\n",
      "36\n",
      "23\n",
      "23\n",
      "23\n",
      "39\n",
      "44\n",
      "42\n",
      "36\n",
      "44\n",
      "36\n",
      "36\n",
      "26\n",
      "36\n",
      "18\n",
      "26\n",
      "73\n",
      "36\n",
      "42\n",
      "36\n",
      "42\n",
      "68\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "21\n",
      "73\n",
      "21\n",
      "39\n",
      "21\n",
      "39\n",
      "39\n",
      "42\n",
      "73\n",
      "36\n",
      "23\n",
      "21\n",
      "55\n",
      "36\n",
      "55\n",
      "55\n",
      "42\n",
      "28\n",
      "44\n",
      "39\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "68\n",
      "28\n",
      "36\n",
      "39\n",
      "42\n",
      "36\n",
      "18\n",
      "18\n",
      "44\n",
      "36\n",
      "39\n",
      "44\n",
      "39\n",
      "36\n",
      "71\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "23\n",
      "26\n",
      "26\n",
      "26\n",
      "26\n",
      "73\n",
      "31\n",
      "36\n",
      "36\n",
      "23\n",
      "36\n",
      "49\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "44\n",
      "39\n",
      "21\n",
      "39\n",
      "21\n",
      "39\n",
      "47\n",
      "36\n",
      "18\n",
      "18\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "63\n",
      "36\n",
      "36\n",
      "42\n",
      "57\n",
      "18\n",
      "39\n",
      "39\n",
      "39\n",
      "65\n",
      "36\n",
      "49\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "39\n",
      "57\n",
      "18\n",
      "60\n",
      "26\n",
      "28\n",
      "52\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "47\n",
      "73\n",
      "39\n",
      "36\n",
      "36\n",
      "57\n",
      "18\n",
      "36\n",
      "39\n",
      "44\n",
      "26\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "71\n",
      "68\n",
      "39\n",
      "57\n",
      "36\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "42\n",
      "39\n",
      "73\n",
      "42\n",
      "36\n",
      "42\n",
      "55\n",
      "18\n",
      "36\n",
      "26\n",
      "44\n",
      "84\n",
      "42\n",
      "42\n",
      "42\n",
      "81\n",
      "36\n",
      "39\n",
      "39\n",
      "55\n",
      "36\n",
      "36\n",
      "18\n",
      "65\n",
      "44\n",
      "23\n",
      "44\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "39\n",
      "36\n",
      "52\n",
      "26\n",
      "57\n",
      "28\n",
      "52\n",
      "49\n",
      "73\n",
      "36\n",
      "55\n",
      "18\n",
      "55\n",
      "28\n",
      "36\n",
      "26\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "52\n",
      "36\n",
      "31\n",
      "36\n",
      "26\n",
      "39\n",
      "26\n",
      "36\n",
      "36\n",
      "39\n",
      "18\n",
      "55\n",
      "47\n",
      "73\n",
      "36\n",
      "26\n",
      "65\n",
      "57\n",
      "39\n",
      "39\n",
      "21\n",
      "28\n",
      "42\n",
      "39\n",
      "36\n",
      "36\n",
      "52\n",
      "71\n",
      "36\n",
      "49\n",
      "49\n",
      "52\n",
      "36\n",
      "65\n",
      "36\n",
      "31\n",
      "42\n",
      "36\n",
      "31\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "39\n",
      "36\n",
      "73\n",
      "18\n",
      "42\n",
      "55\n",
      "73\n",
      "36\n",
      "21\n",
      "57\n",
      "36\n",
      "57\n",
      "73\n",
      "71\n",
      "73\n",
      "60\n",
      "39\n",
      "47\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "34\n",
      "73\n",
      "31\n",
      "36\n",
      "36\n",
      "57\n",
      "36\n",
      "18\n",
      "18\n",
      "21\n",
      "26\n",
      "28\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "42\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "71\n",
      "23\n",
      "52\n",
      "26\n",
      "26\n",
      "18\n",
      "18\n",
      "18\n",
      "78\n",
      "28\n",
      "36\n",
      "36\n",
      "36\n",
      "57\n",
      "52\n",
      "36\n",
      "34\n",
      "39\n",
      "73\n",
      "36\n",
      "42\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "57\n",
      "39\n",
      "36\n",
      "55\n",
      "36\n",
      "28\n",
      "26\n",
      "36\n",
      "36\n",
      "26\n",
      "73\n",
      "73\n",
      "36\n",
      "47\n",
      "42\n",
      "39\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36\n",
      "18\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "73\n",
      "57\n",
      "52\n",
      "36\n",
      "39\n",
      "31\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "49\n",
      "23\n",
      "18\n",
      "36\n",
      "57\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "55\n",
      "18\n",
      "18\n",
      "76\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "47\n",
      "52\n",
      "47\n",
      "36\n",
      "36\n",
      "26\n",
      "36\n",
      "26\n",
      "31\n",
      "26\n",
      "55\n",
      "36\n",
      "21\n",
      "21\n",
      "68\n",
      "36\n",
      "36\n",
      "39\n",
      "47\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "39\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "73\n",
      "44\n",
      "36\n",
      "21\n",
      "18\n",
      "39\n",
      "55\n",
      "36\n",
      "44\n",
      "36\n",
      "44\n",
      "36\n",
      "47\n",
      "36\n",
      "73\n",
      "63\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "18\n",
      "26\n",
      "26\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "26\n",
      "18\n",
      "36\n",
      "36\n",
      "28\n",
      "34\n",
      "31\n",
      "28\n",
      "42\n",
      "28\n",
      "73\n",
      "36\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "57\n",
      "21\n",
      "36\n",
      "39\n",
      "63\n",
      "31\n",
      "31\n",
      "57\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "71\n",
      "36\n",
      "42\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "65\n",
      "18\n",
      "26\n",
      "36\n",
      "36\n",
      "68\n",
      "36\n",
      "36\n",
      "36\n",
      "47\n",
      "28\n",
      "26\n",
      "18\n",
      "28\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "21\n",
      "52\n",
      "44\n",
      "52\n",
      "36\n",
      "39\n",
      "68\n",
      "39\n",
      "36\n",
      "18\n",
      "47\n",
      "21\n",
      "26\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "26\n",
      "28\n",
      "55\n",
      "26\n",
      "39\n",
      "36\n",
      "55\n",
      "36\n",
      "57\n",
      "36\n",
      "57\n",
      "39\n",
      "36\n",
      "21\n",
      "39\n",
      "76\n",
      "39\n",
      "21\n",
      "36\n",
      "55\n",
      "36\n",
      "44\n",
      "44\n",
      "47\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "42\n",
      "52\n",
      "34\n",
      "28\n",
      "36\n",
      "42\n",
      "36\n",
      "28\n",
      "18\n",
      "28\n",
      "47\n",
      "26\n",
      "36\n",
      "39\n",
      "57\n",
      "39\n",
      "42\n",
      "60\n",
      "39\n",
      "39\n",
      "39\n",
      "39\n",
      "36\n",
      "60\n",
      "36\n",
      "36\n",
      "44\n",
      "57\n",
      "36\n",
      "28\n",
      "42\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "26\n",
      "42\n",
      "31\n",
      "84\n",
      "65\n",
      "36\n",
      "63\n",
      "73\n",
      "73\n",
      "73\n",
      "73\n",
      "18\n",
      "36\n",
      "36\n",
      "63\n",
      "42\n",
      "26\n",
      "63\n",
      "21\n",
      "31\n",
      "63\n",
      "55\n",
      "28\n",
      "36\n",
      "44\n",
      "36\n",
      "28\n",
      "36\n",
      "36\n",
      "81\n",
      "42\n",
      "36\n",
      "39\n",
      "39\n",
      "39\n",
      "26\n",
      "26\n",
      "52\n",
      "68\n",
      "31\n",
      "47\n",
      "36\n",
      "36\n",
      "31\n",
      "42\n",
      "31\n",
      "36\n",
      "44\n",
      "39\n",
      "39\n",
      "55\n",
      "28\n",
      "28\n",
      "42\n",
      "36\n",
      "28\n",
      "26\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "57\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "73\n",
      "21\n",
      "36\n",
      "55\n",
      "18\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "21\n",
      "21\n",
      "21\n",
      "26\n",
      "21\n",
      "18\n",
      "18\n",
      "57\n",
      "39\n",
      "36\n",
      "57\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "49\n",
      "65\n",
      "31\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "55\n",
      "18\n",
      "42\n",
      "23\n",
      "36\n",
      "52\n",
      "42\n",
      "65\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "71\n",
      "42\n",
      "21\n",
      "39\n",
      "63\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "26\n",
      "36\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "57\n",
      "57\n",
      "21\n",
      "68\n",
      "44\n",
      "55\n",
      "42\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "42\n",
      "36\n",
      "42\n",
      "39\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "39\n",
      "57\n",
      "55\n",
      "31\n",
      "65\n",
      "36\n",
      "18\n",
      "18\n",
      "28\n",
      "28\n",
      "60\n",
      "39\n",
      "36\n",
      "36\n",
      "47\n",
      "36\n",
      "36\n",
      "55\n",
      "39\n",
      "21\n",
      "21\n",
      "36\n",
      "21\n",
      "21\n",
      "21\n",
      "21\n",
      "57\n",
      "36\n",
      "57\n",
      "39\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "34\n",
      "39\n",
      "36\n",
      "39\n",
      "18\n",
      "52\n",
      "36\n",
      "36\n",
      "21\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "57\n",
      "36\n",
      "39\n",
      "36\n",
      "42\n",
      "21\n",
      "65\n",
      "73\n",
      "39\n",
      "21\n",
      "36\n",
      "39\n",
      "18\n",
      "18\n",
      "21\n",
      "31\n",
      "52\n",
      "57\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "42\n",
      "18\n",
      "18\n",
      "36\n",
      "73\n",
      "42\n",
      "42\n",
      "42\n",
      "39\n",
      "55\n",
      "18\n",
      "36\n",
      "55\n",
      "36\n",
      "28\n",
      "18\n",
      "28\n",
      "71\n",
      "65\n",
      "36\n",
      "36\n",
      "39\n",
      "57\n",
      "36\n",
      "18\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "57\n",
      "39\n",
      "36\n",
      "36\n",
      "26\n",
      "26\n",
      "26\n",
      "26\n",
      "26\n",
      "52\n",
      "26\n",
      "39\n",
      "39\n",
      "36\n",
      "52\n",
      "36\n",
      "36\n",
      "55\n",
      "18\n",
      "36\n",
      "55\n",
      "60\n",
      "39\n",
      "55\n",
      "36\n",
      "55\n",
      "36\n",
      "28\n",
      "52\n",
      "18\n",
      "36\n",
      "36\n",
      "73\n",
      "21\n",
      "36\n",
      "73\n",
      "26\n",
      "31\n",
      "26\n",
      "26\n",
      "36\n",
      "73\n",
      "73\n",
      "52\n",
      "26\n",
      "52\n",
      "60\n",
      "68\n",
      "36\n",
      "57\n",
      "42\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "60\n",
      "23\n",
      "36\n",
      "36\n",
      "39\n",
      "28\n",
      "28\n",
      "39\n",
      "36\n",
      "21\n",
      "120\n",
      "26\n",
      "39\n",
      "39\n",
      "39\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "42\n",
      "36\n",
      "36\n",
      "26\n",
      "39\n",
      "73\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "73\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "18\n",
      "60\n",
      "55\n",
      "31\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "49\n",
      "26\n",
      "49\n",
      "49\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "18\n",
      "18\n",
      "84\n",
      "36\n",
      "36\n",
      "57\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "55\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "52\n",
      "39\n",
      "36\n",
      "39\n",
      "39\n",
      "39\n",
      "26\n",
      "73\n",
      "73\n",
      "39\n",
      "71\n",
      "36\n",
      "21\n",
      "55\n",
      "55\n",
      "55\n",
      "31\n",
      "18\n",
      "23\n",
      "73\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "39\n",
      "73\n",
      "63\n",
      "73\n",
      "36\n",
      "21\n",
      "31\n",
      "39\n",
      "39\n",
      "21\n",
      "73\n",
      "18\n",
      "36\n",
      "21\n",
      "55\n",
      "21\n",
      "49\n",
      "55\n",
      "60\n",
      "73\n",
      "57\n",
      "21\n",
      "36\n",
      "71\n",
      "39\n",
      "36\n",
      "34\n",
      "28\n",
      "28\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "44\n",
      "23\n",
      "39\n",
      "28\n",
      "28\n",
      "21\n",
      "18\n",
      "39\n",
      "57\n",
      "21\n",
      "39\n",
      "57\n",
      "34\n",
      "18\n",
      "31\n",
      "36\n",
      "31\n",
      "57\n",
      "26\n",
      "36\n",
      "36\n",
      "26\n",
      "55\n",
      "18\n",
      "73\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "39\n",
      "73\n",
      "55\n",
      "23\n",
      "60\n",
      "36\n",
      "18\n",
      "44\n",
      "23\n",
      "65\n",
      "57\n",
      "36\n",
      "23\n",
      "49\n",
      "73\n",
      "68\n",
      "76\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "21\n",
      "36\n",
      "39\n",
      "65\n",
      "44\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "42\n",
      "36\n",
      "42\n",
      "36\n",
      "57\n",
      "44\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "68\n",
      "39\n",
      "36\n",
      "39\n",
      "73\n",
      "18\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "63\n",
      "63\n",
      "36\n",
      "21\n",
      "57\n",
      "21\n",
      "36\n",
      "21\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "55\n",
      "55\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "39\n",
      "44\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "47\n",
      "18\n",
      "18\n",
      "36\n",
      "26\n",
      "36\n",
      "21\n",
      "36\n",
      "39\n",
      "55\n",
      "39\n",
      "55\n",
      "55\n",
      "18\n",
      "55\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "63\n",
      "21\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "55\n",
      "36\n",
      "39\n",
      "52\n",
      "36\n",
      "68\n",
      "36\n",
      "26\n",
      "42\n",
      "49\n",
      "73\n",
      "73\n",
      "36\n",
      "39\n",
      "26\n",
      "39\n",
      "26\n",
      "26\n",
      "107\n",
      "60\n",
      "57\n",
      "39\n",
      "39\n",
      "36\n",
      "42\n",
      "36\n",
      "68\n",
      "39\n",
      "73\n",
      "57\n",
      "39\n",
      "34\n",
      "34\n",
      "31\n",
      "21\n",
      "18\n",
      "81\n",
      "36\n",
      "36\n",
      "55\n",
      "31\n",
      "36\n",
      "42\n",
      "18\n",
      "44\n",
      "44\n",
      "26\n",
      "68\n",
      "73\n",
      "39\n",
      "39\n",
      "31\n",
      "55\n",
      "26\n",
      "18\n",
      "36\n",
      "28\n",
      "18\n",
      "39\n",
      "36\n",
      "57\n",
      "21\n",
      "36\n",
      "73\n",
      "76\n",
      "57\n",
      "42\n",
      "36\n",
      "28\n",
      "36\n",
      "60\n",
      "18\n",
      "36\n",
      "26\n",
      "36\n",
      "36\n",
      "18\n",
      "55\n",
      "36\n",
      "57\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "39\n",
      "21\n",
      "21\n",
      "36\n",
      "36\n",
      "36\n",
      "44\n",
      "28\n",
      "28\n",
      "47\n",
      "49\n",
      "34\n",
      "28\n",
      "39\n",
      "21\n",
      "39\n",
      "55\n",
      "36\n",
      "55\n",
      "39\n",
      "55\n",
      "36\n",
      "57\n",
      "39\n",
      "36\n",
      "39\n",
      "55\n",
      "36\n",
      "26\n",
      "26\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "73\n",
      "60\n",
      "55\n",
      "36\n",
      "36\n",
      "39\n",
      "21\n",
      "36\n",
      "73\n",
      "76\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "21\n",
      "52\n",
      "42\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "39\n",
      "47\n",
      "39\n",
      "39\n",
      "52\n",
      "63\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "52\n",
      "49\n",
      "49\n",
      "36\n",
      "39\n",
      "18\n",
      "34\n",
      "36\n",
      "18\n",
      "55\n",
      "68\n",
      "36\n",
      "39\n",
      "47\n",
      "60\n",
      "60\n",
      "60\n",
      "39\n",
      "65\n",
      "28\n",
      "21\n",
      "36\n",
      "28\n",
      "68\n",
      "73\n",
      "36\n",
      "21\n",
      "36\n",
      "42\n",
      "31\n",
      "28\n",
      "18\n",
      "28\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "76\n",
      "39\n",
      "39\n",
      "36\n",
      "73\n",
      "36\n",
      "39\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "57\n",
      "55\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "42\n",
      "36\n",
      "21\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "57\n",
      "55\n",
      "23\n",
      "78\n",
      "60\n",
      "60\n",
      "57\n",
      "39\n",
      "28\n",
      "39\n",
      "57\n",
      "36\n",
      "57\n",
      "60\n",
      "21\n",
      "21\n",
      "21\n",
      "21\n",
      "21\n",
      "39\n",
      "76\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "60\n",
      "36\n",
      "26\n",
      "36\n",
      "26\n",
      "36\n",
      "26\n",
      "63\n",
      "36\n",
      "26\n",
      "36\n",
      "39\n",
      "55\n",
      "26\n",
      "26\n",
      "55\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "39\n",
      "36\n",
      "36\n",
      "73\n",
      "57\n",
      "36\n",
      "36\n",
      "21\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "36\n",
      "39\n",
      "49\n",
      "21\n",
      "44\n",
      "65\n",
      "78\n",
      "36\n",
      "36\n",
      "39\n",
      "73\n",
      "36\n",
      "18\n",
      "36\n",
      "18\n",
      "57\n",
      "39\n",
      "34\n",
      "36\n",
      "21\n",
      "49\n",
      "36\n",
      "36\n",
      "42\n",
      "44\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "26\n",
      "47\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "21\n",
      "36\n",
      "18\n",
      "52\n",
      "39\n",
      "42\n",
      "26\n",
      "55\n",
      "39\n",
      "36\n",
      "60\n",
      "63\n",
      "78\n",
      "39\n",
      "44\n",
      "39\n",
      "39\n",
      "39\n",
      "55\n",
      "39\n",
      "26\n",
      "44\n",
      "18\n",
      "31\n",
      "26\n",
      "44\n",
      "81\n",
      "28\n",
      "68\n",
      "39\n",
      "44\n",
      "55\n",
      "42\n",
      "42\n",
      "55\n",
      "39\n",
      "60\n",
      "49\n",
      "42\n",
      "31\n",
      "18\n",
      "36\n",
      "18\n",
      "36\n",
      "65\n",
      "36\n",
      "36\n",
      "21\n",
      "36\n",
      "36\n",
      "44\n",
      "65\n",
      "36\n",
      "36\n",
      "28\n",
      "28\n",
      "49\n",
      "36\n",
      "31\n",
      "31\n",
      "31\n",
      "73\n",
      "73\n",
      "39\n",
      "36\n",
      "73\n",
      "39\n",
      "36\n",
      "39\n",
      "36\n",
      "39\n",
      "52\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "60\n",
      "60\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "149\n",
      "39\n",
      "36\n",
      "42\n",
      "73\n",
      "36\n",
      "36\n",
      "18\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "49\n",
      "36\n",
      "47\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "31\n",
      "31\n",
      "73\n",
      "31\n",
      "18\n",
      "57\n",
      "52\n",
      "36\n",
      "36\n",
      "18\n",
      "39\n",
      "21\n",
      "36\n",
      "34\n",
      "18\n",
      "21\n",
      "18\n",
      "18\n",
      "18\n",
      "52\n",
      "28\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "39\n",
      "42\n",
      "36\n",
      "39\n",
      "73\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "60\n",
      "73\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "36\n",
      "60\n",
      "36\n",
      "36\n",
      "39\n",
      "57\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "21\n",
      "26\n",
      "36\n",
      "39\n",
      "55\n",
      "23\n",
      "18\n",
      "57\n",
      "31\n",
      "55\n",
      "36\n",
      "26\n",
      "42\n",
      "36\n",
      "28\n",
      "57\n",
      "36\n",
      "55\n",
      "57\n",
      "36\n",
      "57\n",
      "39\n",
      "39\n",
      "39\n",
      "36\n",
      "39\n",
      "21\n",
      "18\n",
      "52\n",
      "39\n",
      "36\n",
      "21\n",
      "36\n",
      "73\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "55\n",
      "36\n",
      "55\n",
      "18\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "28\n",
      "36\n",
      "28\n",
      "36\n",
      "34\n",
      "23\n",
      "39\n",
      "36\n",
      "36\n",
      "26\n",
      "36\n",
      "73\n",
      "73\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "52\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "57\n",
      "36\n",
      "57\n",
      "39\n",
      "28\n",
      "28\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "39\n",
      "36\n",
      "36\n",
      "60\n",
      "26\n",
      "21\n",
      "47\n",
      "18\n",
      "36\n",
      "47\n",
      "39\n",
      "36\n",
      "36\n",
      "47\n",
      "73\n",
      "28\n",
      "18\n",
      "31\n",
      "36\n",
      "31\n",
      "36\n",
      "28\n",
      "36\n",
      "36\n",
      "21\n",
      "21\n",
      "21\n",
      "57\n",
      "39\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "36\n",
      "36\n",
      "55\n",
      "36\n",
      "26\n",
      "36\n",
      "60\n",
      "73\n",
      "36\n",
      "73\n",
      "23\n",
      "44\n",
      "36\n",
      "36\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "36\n",
      "73\n",
      "65\n",
      "36\n",
      "73\n",
      "72\n",
      "36\n",
      "26\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "34\n",
      "36\n",
      "36\n",
      "36\n",
      "36\n",
      "52\n",
      "36\n",
      "39\n",
      "39\n",
      "39\n",
      "36\n",
      "36\n",
      "21\n",
      "34\n",
      "36\n",
      "39\n",
      "42\n",
      "36\n",
      "18\n",
      "36\n",
      "36\n",
      "36\n",
      "26\n",
      "57\n",
      "36\n",
      "39\n",
      "39\n",
      "26\n",
      "36\n",
      "28\n",
      "39\n",
      "26\n",
      "36\n",
      "36\n",
      "21\n",
      "18\n",
      "39\n",
      "23\n",
      "36\n",
      "36\n",
      "36\n",
      "18\n",
      "18\n",
      "18\n",
      "36\n",
      "21\n",
      "36\n",
      "39\n",
      "55\n",
      "55\n",
      "18\n",
      "36\n",
      "34\n",
      "21\n"
     ]
    }
   ],
   "source": [
    "for index,row in applications.iterrows():\n",
    "    req_rest = row['req_rest']\n",
    "    print (req_rest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Таблица запросов отпуска\n",
    "zeros_mask = (wishes != 0).any(axis=1)\n",
    "wishes = wishes[zeros_mask]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{0: 82,\n",
       " 1: 158,\n",
       " 2: 102,\n",
       " 3: 114,\n",
       " 4: 124,\n",
       " 5: 152,\n",
       " 6: 130,\n",
       " 7: 135,\n",
       " 8: 98,\n",
       " 9: 114,\n",
       " 10: 15,\n",
       " 11: 117}"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "holidays_time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "pers_list = qual_hours.index.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "metadata": {},
   "outputs": [],
   "source": [
    " # Create the mip solver with the SCIP backend.\n",
    "solver_2 = pywraplp.Solver.CreateSolver('SCIP')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Variables\n",
    "# x[1,2] - worker 1 assigned to month 2\n",
    "months = list(timetable.columns)\n",
    "x_vac = {}\n",
    "for i in timetable.index.unique():\n",
    "    max_hours = int(max_f.work_h.loc[i])\n",
    "    for j in months:\n",
    "        x_vac[(i,j)] = solver.IntVar(MIN_REST_SIZE, max_hours, 'x_%i_%i' % (i, j))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "for month in holidays_time.keys():\n",
    "    print ('Месяц ',month)\n",
    "    for pers in pers_list:\n",
    "        if x[pers, month].solution_value() > 0:\n",
    "            print ('   ',pers)"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "# Constraints\n",
    "# Sum of qualification hours every month doesnt exceed the month reqs\n",
    "for j in r_pers.columns:\n",
    "    for m in r_pers.index.unique():\n",
    "        solver.Add(\n",
    "            sum(x[(i, j)] * qual_hours.loc[i, m] for i in qual_hours.index.unique()) >= \n",
    "                r_pers.loc[m,j]\n",
    "        )\n",
    "    \n",
    "# # Sum of hours worker work can exceed his limit\n",
    "# for j in data['workers']:\n",
    "#     solver.Add(\n",
    "#         sum(x[(i, j)] * data['worker_hours'][i] for i in data['workers']) <= \n",
    "#         data['worker_hours'][j])"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "for j in r_pers.columns:\n",
    "    for m in r_pers.index.unique():\n",
    "        solver.Add(\n",
    "            sum(x[(i, j)] * qual_hours.loc[i, m] for i in qual_hours.index.unique()) >= \n",
    "                r_pers.loc[m,j]\n",
    "        )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>-90</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>-80</td>\n",
       "      <td>80</td>\n",
       "      <td>-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2183</th>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2185</th>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2186</th>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2214</th>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2235</th>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>84 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      0   1   2   3   4   5   6   7   8   9   10  11\n",
       "56    90  90  90  90  90  90  90  90  90  90  90  90\n",
       "57    90  90  90  90  90  90  90  90  90  90 -90  90\n",
       "60   -80 -80 -80 -80 -80 -80 -80 -80 -80 -80  80 -80\n",
       "70    90  90  90  90  90  90  90  90  90  90  90  90\n",
       "80    90  90  90  90  90  90  90  90  90  90  90  90\n",
       "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..\n",
       "2183  80  80  80  80  80  80  80  80  80  80  80  80\n",
       "2185  80  80  80  80  80  80  80  80  80  80  80  80\n",
       "2186  80  80  80  80  80  80  80  80  80  80  80  80\n",
       "2214  80  80  80  80  80  80  80  80  80  80  80  80\n",
       "2235  80  80  80  80  80  80  80  80  80  80  80  80\n",
       "\n",
       "[84 rows x 12 columns]"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "timetable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "metadata": {},
   "outputs": [],
   "source": [
    "import math"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Ограничения\n",
    "# 1. Общее время за год не может превосходить месячного лимита умноженного на 10\n",
    "\n",
    "\n",
    "for j in r_pers.columns:\n",
    "    solver_2.Add(\n",
    "        sum(x[(i, j)] * max_f.work_h.loc[i] for i in qual_hours.index.unique()) +\\\n",
    "        sum(x_vac[(i, j)] * max_f.work_h.loc[i] for i in qual_hours.index.unique())<= \n",
    "        10*max_f.work_h.loc[i]\n",
    "    )\n",
    "\n",
    "# 2. Сумма работа + отпуск = месячный лимит\n",
    "for j in r_pers.columns:\n",
    "    solver_2.Add(\n",
    "        sum(x[(i, j)] * max_f.work_h.loc[i] for i in qual_hours.index.unique()) +\\\n",
    "        sum(x_vac[(i, j)] for i in qual_hours.index.unique()) <= \n",
    "        10*max_f.work_h.loc[i]\n",
    "    )\n",
    "\n",
    "# 3. Меньшая часть отпуска не может быть меньше 3х часов\n",
    "\n",
    "# 4. Не более 4х отпусков каждому сотруднику TOTAL_RESTS\n",
    "solver_2.Add(\n",
    "    sum(x_vac[(i, j)]-x_vac[(i, j)]+1 for i in timetable.index.unique()) <= \n",
    "    TOTAL_RESTS\n",
    ")\n",
    "\n",
    "\n",
    "# 5. Минимальный размер отпуска в часах MIN_REST_SIZE\n",
    "#  Выполняется настройкой переменных солвера\n",
    "\n",
    "# 6. Суммарный максимальный объем отпусков в часах REST_YEAR\n",
    "solver_2.Add(\n",
    "    sum(x_vac[(i, j)] for i in timetable.index.unique()) <= \n",
    "    REST_YEAR\n",
    ")\n",
    "\n",
    "# 7. Разрыв между отпусками менее MIN_REST_LAG не может быть\n",
    "for i in timetable.index.unique():    \n",
    "    solver_2.Add(\n",
    "        sum(x_vac[(i,j)]-x_vac[(i,j)]+1 for j in months) +\\\n",
    "        sum(x_vac[(i,months[j+1])]-x_vac[(i,months[j+1])]+1 \\\n",
    "            for j in range(0,len(months)-1))\n",
    "        #sum(math.ceil(x_vac[(i,months[j+1])]max_f.work_h.loc[i]) for j in months) \\\n",
    "        <= MIN_REST_LAG\n",
    "    )\n",
    "\n",
    "# 8. Количество отпусков в топовые месяцы <= PRIOR_RESTS\n",
    "# 9. Количество отпусков в нетоповые месяцы <= NOPRIOR_RESTS\n",
    "\n",
    "        \n",
    "\n",
    "# 10. Суммарно количество отпусков в топовые месяцы не может превосходить REST_HIGH\n",
    "# 11.Суммарно количество отпусков в нетоповые месяцы не может превосходить REST_LOW\n",
    "top_months =[ 4,5,6]\n",
    "for j in months:\n",
    "    if j in top_months:\n",
    "        solver_2.Add(\n",
    "            sum(x_vac[(i, j)] for i in timetable.index.unique()) <= \n",
    "            REST_HIGH\n",
    "        )\n",
    "    else:\n",
    "        solver_2.Add(\n",
    "            sum(x_vac[(i, j)] for i in timetable.index.unique()) <= \n",
    "            REST_LOW\n",
    "        )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Целевая функция\n",
    "# 1. Максимальное удовлетворение запросов на рабочие часы (минимум неудовлетворения часов)\n",
    "# 2. Максимальная раздача отпусков в оставшиеся часы\n",
    "# 3. Максимальное удовлетворение заявок (не по размерам, а по факту назначения отпуска в месяц заявки)\n",
    "# 4. Максимальный суммарный рейтинг заявок, удовлетворенных в п.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [],
   "source": [
    "applications = pd.merge(applications, p_lvl.reset_index(), on ='pers', how ='inner').drop(columns=['lvl'], axis = 0) \n",
    "#applications.drop(columns=['lvl'], axis = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "unsupported operand type(s) for /: 'int' and 'list'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-217-470a52e76023>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#                          /sum(r_pers.loc[m])\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m obj_func = solver_2.Sum(sum(applications['req_rest'])/[x_vac[(i, j)]\\\n\u001b[0m\u001b[1;32m      6\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtimetable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mj\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtimetable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m                          if i in applications['index'].unique()])\n",
      "\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for /: 'int' and 'list'"
     ]
    }
   ],
   "source": [
    "# obj_func = solver_2.Sum([x_vac[(i, j)]\\\n",
    "#             for i in template.index.unique() for j in template.columns])\\\n",
    "#                          /sum(r_pers.loc[m])\n",
    "\n",
    "obj_func = solver_2.Sum([x_vac[(i, j)]\\\n",
    "            for i in timetable.index.unique() for j in timetable.columns \\\n",
    "                         if i in applications['index'].unique()])\\\n",
    "                         /sum(applications['req_rest'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [],
   "source": [
    "solver_2.Minimize(obj_func)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 211,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "solver_2.Solve()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "status = solver_2.Solve()\n",
    "\n",
    "holidays_time = {}\n",
    "\n",
    "if status == pywraplp.Solver.OPTIMAL:\n",
    "    num_months = 0\n",
    "    all_tasks_completed = False\n",
    "    \n",
    "    \n",
    "    for j in r_pers.columns:\n",
    "        print('Month number', j)\n",
    "        holidays_time[j] = 0\n",
    "        \n",
    "        for m in qualifications:\n",
    "            print ('  Квалификация ', m)\n",
    "            month_workers = []\n",
    "            month_assigned_hours = 0\n",
    "\n",
    "\n",
    "            for i in qual_hours.index.unique():\n",
    "                if x[i, j].solution_value() > 0:\n",
    "                    if qual_hours.loc[i, m] >0:\n",
    "                        month_workers.append(i)\n",
    "                        month_assigned_hours += qual_hours.loc[i, m]\n",
    "                        timetable.loc[i, j] = timetable.loc[i, j]- qual_hours.loc[i, m]\n",
    "\n",
    "            if month_assigned_hours > 0:\n",
    "                num_months += 1\n",
    "                \n",
    "                print('    Назначенные работники:{0}'.format(len(month_workers)), \n",
    "                      month_workers)\n",
    "                print ('    Нужно часов в месяце:', \n",
    "                       r_pers.loc[m,j])\n",
    "                print('    Присвоено часов в месяце:', \n",
    "                      month_assigned_hours)\n",
    "                print('    Процент:', \n",
    "                      month_assigned_hours/r_pers.loc[m,j])\n",
    "\n",
    "                print()\n",
    "            \n",
    "            total_req_hours[m] += r_pers.loc[m,j]\n",
    "            total_assigned_hours[m] += month_assigned_hours\n",
    "            \n",
    "            if total_assigned_hours[m] >= total_req_hours[m]:\n",
    "                all_tasks_completed = True\n",
    "            holidays_time[j] += month_assigned_hours - r_pers.loc[m,j]\n",
    "        \n",
    "        print ('Время для отпуска: ',holidays_time[j],'\\n')\n",
    "            \n",
    "    print()\n",
    "\n",
    "    print('Time = ', solver.WallTime(), ' milliseconds')\n",
    "    print ()\n",
    "    if all_tasks_completed:\n",
    "        print ('***100% задач обеспечены ресурсами***')\n",
    "else:\n",
    "    print('The problem does not have an optimal solution.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n",
      "36.0\n"
     ]
    }
   ],
   "source": [
    "for j in timetable.columns:\n",
    "    for i in timetable.index.unique():\n",
    "        if x_vac[i,j].solution_value() > 0:\n",
    "            print (x_vac[i,j].solution_value())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
